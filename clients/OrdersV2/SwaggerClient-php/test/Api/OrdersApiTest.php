<?php
/**
 * OrdersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  BigCommerce\OrdersV2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Orders V2
 *
 * Manage order coupons, messages, products, shipping addresses, statuses, taxes, shipments, and shipping address quotes.  - [Authentication](#authentication) - [Order](#order)  ## Authentication  Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` and `client_id` in the request headers.  ```http GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}} Content-Type: application/json X-Auth-Client: {{CLIENT_ID}} X-Auth-Token: {{ACCESS_TOKEN}} ```  ### OAuth Scopes  |  **UI Name** | **Permission** | **Parameter** | | --- | --- | --- | |  Orders | modify | `store_v2_orders` | |  Orders | read-only | `store_v2_orders_read_only` |   ## Order  The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/api-docs/orders/orders-api-overview).  ### Currency Fields  * `currency_code` - the display currency used to present prices to the shopper on the storefront. * `currency_exchange_rate`: the exchange rate between the store's default currency and the display currency; when the order is created by means of the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).  The following additional fields are returned on orders when Multi-Currency is enabled on the store:  * `store_default_currency_code` - the store's default currency * `store_default_to_transactional_exchange_rate` - the exchange rate between the store's default currency and the transactional currency used in the order.  **Example:**  ```json {   ...   \"currency_id\": 4,   \"currency_code\": \"EUR\",   \"currency_exchange_rate\": 1,   \"default_currency_id\": 4,   \"default_currency_code\": \"EUR\",   \"store_default_currency_code: \"USD\",   \"store_default_to_transactional_exchange_rate\": \"100.0000000000\"   ... } ```
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.21
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace BigCommerce\OrdersV2;

use BigCommerce\OrdersV2\Configuration;
use BigCommerce\OrdersV2\ApiException;
use BigCommerce\OrdersV2\ObjectSerializer;
use BigCommerce\OrdersV2\Api\OrdersApi;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  BigCommerce\OrdersV2
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrdersApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
        $secrets = json_decode(file_get_contents(__DIR__ . '/../../../../../gulpfile.config.json'), true);

        $config = Configuration::getDefaultConfiguration();
        $config->setApiKey('X-Auth-Client', $secrets['clientId']);
        $config->setApiKey('X-Auth-Token', $secrets['accessToken']);
        $config->setHost(str_replace('{$$.env.store_hash}', $secrets['storeId'], $config->getHost()));      
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createAnOrder
     *
     * Create an Order.
     *
     */
    public function testCreateAnOrder()
    {
    }

    /**
     * Test case for deleteAllOrders
     *
     * Delete All Orders.
     *
     */
    public function testDeleteAllOrders()
    {
    }

    /**
     * Test case for deleteAnOrder
     *
     * Archive an Order.
     *
     */
    public function testDeleteAnOrder()
    {
    }

    /**
     * Test case for getAllOrders
     *
     * Get All Orders.
     *
     */
    public function testGetAllOrders()
    {
        $apiInstance = new OrdersApi(
            new \GuzzleHttp\Client(),
            Configuration::getDefaultConfiguration()
        );

        try {
            $result = $apiInstance->getAllOrders('application/json', 'application/json');
            // oops - this really is just returning nothing! 
            // see https://developer.bigcommerce.com/api-reference/store-management/orders/orders/getallorders
            $this->assertNull($result);
        } catch (Exception $e) {
            echo 'Exception when calling OrdersApi->getAllOrders: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for getAnOrder
     *
     * Get an Order.
     *
     */
    public function testGetAnOrder()
    {
    }

    /**
     * Test case for getCountOrder
     *
     * Get a Count of Orders.
     *
     */
    public function testGetCountOrder()
    {
    }

    /**
     * Test case for updateAnOrder
     *
     * Update an Order.
     *
     */
    public function testUpdateAnOrder()
    {
    }
}
